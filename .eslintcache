[{"D:\\React\\demo-upt\\src\\index.tsx":"1","D:\\React\\demo-upt\\src\\App.tsx":"2","D:\\React\\demo-upt\\src\\Containers\\DrawToolComponent.tsx":"3","D:\\React\\demo-upt\\src\\Drawtool\\draw-tool\\DrawTool.ts":"4","D:\\React\\demo-upt\\src\\Drawtool\\draw-tool\\DrawHistory.ts":"5","D:\\React\\demo-upt\\src\\Drawtool\\draw-tool\\Sides.ts":"6","D:\\React\\demo-upt\\src\\Drawtool\\utils\\errors.ts":"7","D:\\React\\demo-upt\\src\\Drawtool\\utils\\escapeJSON.ts":"8","D:\\React\\demo-upt\\src\\Drawtool\\draw-tool\\Side.ts":"9","D:\\React\\demo-upt\\src\\Drawtool\\draw-tool\\Items.ts":"10","D:\\React\\demo-upt\\src\\Drawtool\\draw-tool\\Layers.ts":"11","D:\\React\\demo-upt\\src\\Drawtool\\utils\\clip.ts":"12","D:\\React\\demo-upt\\src\\Drawtool\\draw-tool\\Item.ts":"13","D:\\React\\demo-upt\\src\\Drawtool\\utils\\colorPicker.ts":"14"},{"size":219,"mtime":1607690246228,"results":"15","hashOfConfig":"16"},{"size":11422,"mtime":1608123283112,"results":"17","hashOfConfig":"16"},{"size":580,"mtime":1607830279765,"results":"18","hashOfConfig":"16"},{"size":6151,"mtime":1608123900754,"results":"19","hashOfConfig":"16"},{"size":2457,"mtime":1608122134147,"results":"20","hashOfConfig":"16"},{"size":1379,"mtime":1607764439682,"results":"21","hashOfConfig":"16"},{"size":331,"mtime":1607692463886,"results":"22","hashOfConfig":"16"},{"size":202,"mtime":1607763261579,"results":"23","hashOfConfig":"16"},{"size":67843,"mtime":1608125054967,"results":"24","hashOfConfig":"16"},{"size":313,"mtime":1607691416245,"results":"25","hashOfConfig":"16"},{"size":6691,"mtime":1607830179715,"results":"26","hashOfConfig":"16"},{"size":8129,"mtime":1607829994804,"results":"27","hashOfConfig":"16"},{"size":1588,"mtime":1607691418766,"results":"28","hashOfConfig":"16"},{"size":3421,"mtime":1608124397881,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2oitw0",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React\\demo-upt\\src\\index.tsx",[],["62","63"],"D:\\React\\demo-upt\\src\\App.tsx",["64","65"],"import React, { Component } from 'react';\nimport './App.css';\nimport DrawToolComponent from './Containers/DrawToolComponent';\nimport DrawTool from './Drawtool/draw-tool/DrawTool';\n\ninterface Props { }\n\ninterface State {\n  dataObj: any\n};\n\nclass App extends Component<Props, State> {\n  state: State = {\n    dataObj: {}\n  };\n\n  constructor(props: Props) {\n    super(props)\n    let dataObj: any\n    this.loadToolBar = this.loadToolBar.bind(this)\n\n    dataObj =\n    {\n      Product:\n      {\n        id: \"IT401\",\n        full_prin: 0,\n        title: \"オックスフォードボタンダウンショートスリーブシャツ\",\n        embroider_able: 0,\n        special_draw: 0,\n        category_id: 38,\n        price: 2800,\n        size: \"S~XL\",\n        material: \"綿100％\",\n        color_total: \"全3色\",\n        sale_price: 1800,\n        tool_price: 3600,\n        item_code_nominal: \"1268-01\"\n      },\n      colors:\n        [\n          {\n            ProductColor:\n              { id: \"ITSU5895\", title: \"OX ホワイト\", value: \"#ffffff\", is_main: 1 }\n            ,\n            sides:\n              [\n                {\n                  ProductColorSide:\n                  {\n                    id: \"9637\",\n                    name: \"1\",\n                    title: \"表\",\n                    image_url: \"https://s3-ap-northeast-1.amazonaws.com/storage.up-t.jp/Products/fullsize/1268-01-440 l.png\",\n                    print_price: 800,\n                    content:\n                    {\n                      id: \"1\",\n                      imageUrl: \"https://s3-ap-northeast-1.amazonaws.com/storage.up-t.jp/Products/fullsize/1268-01-440 l.png\",\n                      size: {\n                        cm: { width: 1000, height: 1000 },\n                        pixel: { width: 1000, height: 1000 }\n                      },\n                      canvas:\n                      {\n                        objects: [],\n                        background: \"#ffffff\",\n                        backgroundImage:\n                        {\n                          type: \"image\",\n                          originX: \"center\",\n                          originY: \"center\",\n                          left: 0,\n                          top: 0,\n                          width: 1000,\n                          height: 1000,\n                          fill: \"rgb(0,0,0)\",\n                          stroke: null,\n                          strokeWidth: 0,\n                          strokeDashArray: null,\n                          strokeLineCap: \"butt\",\n                          strokeLineJoin: \"miter\",\n                          strokeMiterLimit: 10,\n                          scaleX: 0.73,\n                          scaleY: 0.73,\n                          angle: 0,\n                          flipX: false,\n                          flipY: false,\n                          opacity: 0.5,\n                          shadow: null,\n                          visible: true,\n                          clipTo: null,\n                          backgroundColor: \"\",\n                          fillRule: \"nonzero\",\n                          globalCompositeOperation: \"source-over\",\n                          transformMatrix: null,\n                          skewX: 0,\n                          skewY: 0,\n                          uuid: \"7d55846954a24821a426b83a858bd5b9\",\n                          src: \"https://s3-ap-northeast-1.amazonaws.com/storage.up-t.jp/Products/fullsize/1268-01-440 l.png\",\n                          filters: [],\n                          resizeFilters: [],\n                          crossOrigin: \"anonymous\",\n                          alignX: \"none\",\n                          alignY: \"none\",\n                          meetOrSlice: \"meet\"\n                        }\n                      },\n                      border:\n                      {\n                        cm: { left: 585, top: 414, width: 81, height: 69 },\n                        pixel: { left: 585, top: 414, width: 81, height: 69 }\n                      }\n                    },\n                    content_over_flow: null,\n                    overlay_image: null,\n                    is_main: 1\n                  }\n                },\n                {\n                  ProductColorSide:\n                  {\n                    id: \"9638\",\n                    name: \"2\",\n                    title: \"裏\",\n                    image_url: \"https://s3-ap-northeast-1.amazonaws.com/storage.up-t.jp/Products/fullsize/1268-01-440-back l.png\",\n                    print_price: 1000,\n                    content:\n                    {\n                      id: \"2\",\n                      imageUrl: \"https://s3-ap-northeast-1.amazonaws.com/storage.up-t.jp/Products/fullsize/1268-01-440-back l.png\",\n                      size:\n                      {\n                        cm: { width: 1000, height: 1000 },\n                        pixel: { width: 1000, height: 1000 }\n                      },\n                      canvas:\n                      {\n                        objects: [],\n                        background: \"#ffffff\",\n                        backgroundImage:\n                        {\n                          type: \"image\",\n                          originX: \"center\",\n                          originY: \"center\",\n                          left: 0,\n                          top: 0,\n                          width: 1000,\n                          height: 1000,\n                          fill: \"rgb(0,0,0)\",\n                          stroke: null,\n                          strokeWidth: 0,\n                          strokeDashArray: null,\n                          strokeLineCap: \"butt\",\n                          strokeLineJoin: \"miter\",\n                          strokeMiterLimit: 10,\n                          scaleX: 0.73,\n                          scaleY: 0.73,\n                          angle: 0,\n                          flipX: false,\n                          flipY: false,\n                          opacity: 0.5,\n                          shadow: null,\n                          visible: true,\n                          clipTo: null,\n                          backgroundColor: \"\",\n                          fillRule: \"nonzero\",\n                          globalCompositeOperation: \"source-over\",\n                          transformMatrix: null,\n                          skewX: 0,\n                          skewY: 0,\n                          uuid: \"7d55846954a24821a426b83a858bd5b9\",\n                          src: \"https://s3-ap-northeast-1.amazonaws.com/storage.up-t.jp/Products/fullsize/1268-01-440-back l.png\",\n                          filters: [],\n                          resizeFilters: [],\n                          crossOrigin: \"anonymous\",\n                          alignX: \"none\",\n                          alignY: \"none\",\n                          meetOrSlice: \"meet\"\n                        }\n                      },\n                      border:\n                      {\n                        cm: { left: 356, top: 221, width: 295, height: 407 },\n                        pixel: { left: 356, top: 221, width: 295, height: 407 }\n                      }\n                    },\n                    content_over_flow: null,\n                    overlay_image: null,\n                    is_main: 0\n                  }\n                },\n              ]\n          }\n        ]\n    }\n\n    this.state.dataObj = dataObj.colors\n  }\n\n  componentDidMount() {\n    this.loadProduct()\n  }\n\n  loadToolBar() {\n    return <h1>ToolBar</h1>\n  }\n\n\n  loadProduct() {\n    DrawTool._embroideryPaths = [];\n    // if (action.payload.Product && action.payload.colors.length) {\n    //   if (action.payload.Product.category_id === 62) {\n    //     DrawTool.is_nail = true;\n    //     // DrawTool.is_ribbon = false;\n    //   }\n    //   //  else if(action.payload.Product.category_id === 80){\n    //   //   DrawTool.is_ribbon = true;\n    //   // }\n    //   else {\n    //     DrawTool.is_nail = false;\n    //     // DrawTool.is_ribbon = false;\n    //   }\n\n\n\n    let color = this.state.dataObj[0]\n\n    // console.log(action.payload);\n    // if (!action.payload.Product.embroider_able)\n    //   action.payload.Product.embroider_able = 0;\n    // if (1 == action.payload.Product.embroider_able)\n    //   DrawTool.embroider_able = true;\n    // else\n    //   DrawTool.embroider_able = false;\n\n\n    // if ((action.payload.Product.special_draw) && (action.payload.Product.special_draw >= DrawTool.modeSetup.LASER)) {\n    //   DrawTool.modeToolDraw = action.payload.Product.special_draw;\n    // }\n    // else {\n    //   if (DrawTool.embroider_able)\n    //     DrawTool.modeToolDraw = DrawTool.modeSetup.EMBROIDER;\n    //   else {\n    //     if (DrawTool.embroider_able)\n    //       DrawTool.modeToolDraw = DrawTool.modeSetup.EMBROIDER;\n    //     else\n    //       DrawTool.modeToolDraw = -1;\n    //   }\n    // }\n\n    const data = color.sides.map((side: any) => {\n\n      let content = side.ProductColorSide.content\n\n      return content;//JSON.parse(JSON.parse(escapeJSON(side.ProductColorSide.content)));\n    });\n\n    // console.log(data);\n\n\n    // store.dispatch(actions.updateProcessBar(0.7))\n    let overlayImages = \"\";\n    if (color.sides.length === 1) {\n      overlayImages = color.sides.map((side: any) => {\n        if (side.ProductColorSide.overlay_image) {\n          return side.ProductColorSide.overlay_image;\n        }\n      });\n    }\n\nconsole.log(data);\n\n    DrawTool.importJSON(JSON.stringify(data)).then(() => {\n      DrawTool.sides.select(color.sides[1].ProductColorSide.content.id);\n      // store.dispatch(product_action.setLoadingData(false));\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].border_special) {\n          DrawTool.sides.selected.saveBoder(data[i].border, data[i].border_special);\n        }\n      }\n      // if (data.length === 1 && overlayImages.length > 0 && overlayImages[0] && !DrawTool.is_nail) {\n      //   DrawTool.sides.selected.overlay = true\n      //   DrawTool.sides.selected.setOverlayBorder(overlayImages[0]);\n      //   DrawTool.sides.selected.FabricCanvas._objects.map((item: any) => {\n      //     if (item.id != \"FabricBorder\") {\n      //       item.clipTo = null\n      //     }\n      //   });\n      //   DrawTool.sides.selected.FabricCanvas.renderAll();\n      // }\n      DrawTool.sides.selected.FabricCanvas.renderAll();\n      // store.dispatch(actions.updateProcessBar(0.99))\n      setTimeout(() => {\n\n        // store.dispatch(actions.resetDefaultParas(false));\n        DrawTool.sides.selected.setSelectableForDesign();\n        // store.dispatch(product_action.setLoadingData(false));\n        // store.dispatch(actions.setLoading(false));\n        // store.dispatch(actions.updateProcessBar(100));\n        // store.dispatch(actions.setLoadingProcess(false));\n        DrawTool.setLayerSetup(-1);\n        // if (DrawTool.modeSetup.LASER == DrawTool.modeToolDraw) {\n        //   store.dispatch(actions.updateBorder());\n        // }\n      }, 2000)\n      DrawTool.trigger('product:load', {});\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <div className=\"app-container\">\n\n          <div className=\"app-container-inner\">\n            <div className=\"toolbar\">\n              {this.loadToolBar()}\n            </div>\n            <DrawToolComponent colors={this.state.dataObj}></DrawToolComponent>\n          </div>\n        </div>\n\n      </div >\n    );\n  }\n\n}\n\nexport default App;\n","D:\\React\\demo-upt\\src\\Containers\\DrawToolComponent.tsx",["66"],"import { Component, ReactNode } from \"react\";\r\nimport DrawTool from \"../Drawtool/draw-tool/DrawTool\";\r\n\r\ninterface Props {\r\n    colors:any\r\n }\r\n\r\ninterface State {\r\n    node: ReactNode\r\n};\r\n\r\nclass DrawToolComponent extends Component<Props, State>{\r\n    state: State = {\r\n        node: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        DrawTool.initialize(this.state.node as HTMLElement, {});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"draw-tool\" ref={(node) => { this.state.node = node}} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DrawToolComponent;","D:\\React\\demo-upt\\src\\Drawtool\\draw-tool\\DrawTool.ts",[],"D:\\React\\demo-upt\\src\\Drawtool\\draw-tool\\DrawHistory.ts",[],"D:\\React\\demo-upt\\src\\Drawtool\\draw-tool\\Sides.ts",[],"D:\\React\\demo-upt\\src\\Drawtool\\utils\\errors.ts",[],"D:\\React\\demo-upt\\src\\Drawtool\\utils\\escapeJSON.ts",[],"D:\\React\\demo-upt\\src\\Drawtool\\draw-tool\\Side.ts",["67","68","69","70","71","72","73","74","75","76","77","78","79","80"],"D:\\React\\demo-upt\\src\\Drawtool\\draw-tool\\Items.ts",[],"D:\\React\\demo-upt\\src\\Drawtool\\draw-tool\\Layers.ts",[],"D:\\React\\demo-upt\\src\\Drawtool\\utils\\clip.ts",["81","82","83"],"export default function (border: any, offset = true) {\r\n\r\n  if (typeof border._objects !== 'undefined' && border._objects.length > 0 && border._objects[0].type === 'path') {\r\n    var generate = function () {\r\n      return `\r\n          if(!!this.lastBorder){\r\n              var dataBoder=JSON.parse(this.lastBorder);\r\n              if(dataBoder.isPath){\r\n                    var border = dataBoder.border;\r\n                    var offsetY = dataBoder.offsetY;\r\n                    var offsetX = dataBoder.offsetX;\r\n        \r\n                    this.setCoords();\r\n                    ctx.save();\r\n                    var m = this.calcTransformMatrix();\r\n                    var iM = fabric.util.invertTransform(m);\r\n                    ctx.transform.apply(ctx, iM);\r\n                    ctx.beginPath();\r\n                    for(var i=0;i<dataBoder.allBorder.length;i++){\r\n                      let path = dataBoder.allBorder[i];\r\n                      var valueX=offsetX - dataBoder.minX * border.scaleX + (dataBoder.drawToolBorder.strokeWidth / 2) * border.scaleX;\r\n                      var valueY=offsetY - dataBoder.minY * border.scaleY + (dataBoder.drawToolBorder.strokeWidth / 2) * border.scaleY;\r\n                      DrawTool.drawPathOnCtx.call(\r\n                        path,\r\n                        ctx,\r\n                        valueX,\r\n                        valueY,\r\n                        border.scaleX,\r\n                        border.scaleY\r\n                      );\r\n  \r\n                    }\r\n        \r\n                    ctx.closePath();\r\n                    ctx.restore();\r\n              }\r\n              else\r\n              {\r\n                  this.setCoords();\r\n                  var clipRect = dataBoder.border;\r\n                  var offsetY = dataBoder.offsetY;\r\n                  var offsetX = dataBoder.offsetX;\r\n                  ctx.save();\r\n                  var m = this.calcTransformMatrix();\r\n                  var iM = fabric.util.invertTransform(m);\r\n                  ctx.transform.apply(ctx, iM);\r\n                  ctx.beginPath();\r\n          \r\n                  ctx.rect(\r\n                    offsetX,\r\n                    offsetY,\r\n                    clipRect.width - clipRect.strokeWidth,\r\n                    clipRect.height - clipRect.strokeWidth\r\n                  );\r\n                  ctx.closePath();\r\n                  ctx.restore();\r\n              }\r\n          }\r\n          else\r\n          {\r\n            if((!!DrawTool.sides.selected.FabricBorder._objects)&&(DrawTool.sides.selected.FabricBorder._objects.length>0)){\r\n              var border = fabric.util.object.clone(DrawTool.sides.selected.FabricBorder._objects[0]);\r\n              var offset = ${JSON.stringify(offset)};\r\n              if(offset){\r\n                var offsetY = DrawTool.sides.selected.FabricBorder.top;\r\n                var offsetX = DrawTool.sides.selected.FabricBorder.left;\r\n              } else {\r\n                var offsetY = 0;\r\n                var offsetX = 0;\r\n              }\r\n  \r\n              this.setCoords();\r\n              ctx.save();\r\n              var m = this.calcTransformMatrix();\r\n              var iM = fabric.util.invertTransform(m);\r\n              ctx.transform.apply(ctx, iM);\r\n              ctx.beginPath();\r\n  \r\n              Array.prototype.forEach.call(DrawTool.sides.selected.FabricBorder._objects, function(path, i) {\r\n                DrawTool.drawPathOnCtx.call(\r\n                  path,\r\n                  ctx,\r\n                  offsetX - border.minX * border.scaleX + (DrawTool.border.strokeWidth / 2) * border.scaleX,\r\n                  offsetY - border.minY * border.scaleY + (DrawTool.border.strokeWidth / 2) * border.scaleY,\r\n                  border.scaleX,\r\n                  border.scaleY\r\n                );\r\n              });\r\n  \r\n              ctx.closePath();\r\n              ctx.restore();\r\n            }\r\n            else\r\n            {\r\n  \r\n              this.setCoords();\r\n                var offsetY = DrawTool.sides.selected.FabricBorder.top;\r\n                var offsetX = DrawTool.sides.selected.FabricBorder.left;\r\n                ctx.save();\r\n                var m = this.calcTransformMatrix();\r\n                var iM = fabric.util.invertTransform(m);\r\n                ctx.transform.apply(ctx, iM);\r\n                ctx.beginPath();\r\n        \r\n                ctx.rect(\r\n                  offsetX,\r\n                  offsetY,\r\n                  DrawTool.sides.selected.FabricBorder.width - DrawTool.sides.selected.FabricBorder.strokeWidth,\r\n                  DrawTool.sides.selected.FabricBorder.height - DrawTool.sides.selected.FabricBorder.strokeWidth\r\n                );\r\n                ctx.closePath();\r\n                ctx.restore();\r\n  \r\n            }\r\n          }\r\n          `;\r\n    }\r\n  } else {\r\n    var rect = Object.assign({}, {\r\n      left: border.left,\r\n      top: border.top,\r\n      width: border.width,\r\n      height: border.height,\r\n      strokeWidth: border.strokeWidth,\r\n    });\r\n\r\n    var generate = function () {\r\n      return `\r\n          if(!!this.lastBorder){\r\n            var dataBoder=JSON.parse(this.lastBorder);\r\n            if(dataBoder.isPath){\r\n                    var border = dataBoder.border;\r\n                    var offsetY = dataBoder.offsetY;\r\n                    var offsetX = dataBoder.offsetX;\r\n        \r\n                    this.setCoords();\r\n                    ctx.save();\r\n                    var m = this.calcTransformMatrix();\r\n                    var iM = fabric.util.invertTransform(m);\r\n                    ctx.transform.apply(ctx, iM);\r\n                    ctx.beginPath();\r\n                    for(var i=0;i<dataBoder.allBorder.length;i++){\r\n                      let path = dataBoder.allBorder[i];\r\n                      var valueX=offsetX - dataBoder.minX * border.scaleX + (dataBoder.drawToolBorder.strokeWidth / 2) * border.scaleX;\r\n                      var valueY=offsetY - dataBoder.minY * border.scaleY + (dataBoder.drawToolBorder.strokeWidth / 2) * border.scaleY;\r\n                      DrawTool.drawPathOnCtx.call(\r\n                        path,\r\n                        ctx,\r\n                        valueX,\r\n                        valueY,\r\n                        border.scaleX,\r\n                        border.scaleY\r\n                      );\r\n                    }\r\n        \r\n                    ctx.closePath();\r\n                    ctx.restore();\r\n            }\r\n            else\r\n            {\r\n              this.setCoords();\r\n              var clipRect = dataBoder.border;\r\n              var offsetY = dataBoder.offsetY;\r\n              var offsetX = dataBoder.offsetX;\r\n              ctx.save();\r\n              var m = this.calcTransformMatrix();\r\n              var iM = fabric.util.invertTransform(m);\r\n              ctx.transform.apply(ctx, iM);\r\n              ctx.beginPath();\r\n      \r\n              ctx.rect(\r\n                offsetX,\r\n                offsetY,\r\n                clipRect.width - clipRect.strokeWidth,\r\n                clipRect.height - clipRect.strokeWidth\r\n              );\r\n              ctx.closePath();\r\n              ctx.restore();\r\n            }\r\n          }\r\n          else\r\n          {\r\n             this.setCoords();\r\n              var clipRect = ${JSON.stringify(rect)};\r\n              var offset = ${JSON.stringify(offset)};\r\n      \r\n              if(offset){\r\n                var offsetY = clipRect.top;\r\n                var offsetX = clipRect.left;\r\n              } else {\r\n                var offsetY = 0;\r\n                var offsetX = 0;\r\n              }\r\n              ctx.save();\r\n              var m = this.calcTransformMatrix();\r\n              var iM = fabric.util.invertTransform(m);\r\n              ctx.transform.apply(ctx, iM);\r\n              ctx.beginPath();\r\n      \r\n              ctx.rect(\r\n                offsetX,\r\n                offsetY,\r\n                clipRect.width - clipRect.strokeWidth,\r\n                clipRect.height - clipRect.strokeWidth\r\n              );\r\n              ctx.closePath();\r\n              ctx.restore();\r\n          }\r\n  \r\n          `\r\n    }\r\n  }\r\n\r\n  return new Function('ctx', generate());\r\n};\r\n","D:\\React\\demo-upt\\src\\Drawtool\\draw-tool\\Item.ts",[],"D:\\React\\demo-upt\\src\\Drawtool\\utils\\colorPicker.ts",["84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":265,"column":7,"nodeType":"91","messageId":"92","endLine":265,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":265,"column":51,"nodeType":"95","messageId":"96","endLine":265,"endColumn":53},{"ruleId":"97","severity":1,"message":"98","line":23,"column":57,"nodeType":"99","endLine":23,"endColumn":67},{"ruleId":"89","severity":1,"message":"100","line":8,"column":8,"nodeType":"91","messageId":"92","endLine":8,"endColumn":12},{"ruleId":"101","severity":1,"message":"102","line":148,"column":13,"nodeType":"103","messageId":"104","endLine":148,"endColumn":26},{"ruleId":"89","severity":1,"message":"105","line":163,"column":13,"nodeType":"91","messageId":"92","endLine":163,"endColumn":18},{"ruleId":"89","severity":1,"message":"106","line":164,"column":13,"nodeType":"91","messageId":"92","endLine":164,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":195,"column":13,"nodeType":"103","messageId":"104","endLine":195,"endColumn":26},{"ruleId":"93","severity":1,"message":"107","line":443,"column":76,"nodeType":"95","messageId":"108","endLine":443,"endColumn":78},{"ruleId":"89","severity":1,"message":"109","line":584,"column":25,"nodeType":"91","messageId":"92","endLine":584,"endColumn":26},{"ruleId":"101","severity":1,"message":"102","line":643,"column":13,"nodeType":"103","messageId":"104","endLine":643,"endColumn":26},{"ruleId":"101","severity":1,"message":"102","line":695,"column":13,"nodeType":"103","messageId":"104","endLine":695,"endColumn":26},{"ruleId":"89","severity":1,"message":"110","line":843,"column":17,"nodeType":"91","messageId":"92","endLine":843,"endColumn":33},{"ruleId":"89","severity":1,"message":"111","line":911,"column":17,"nodeType":"91","messageId":"92","endLine":911,"endColumn":42},{"ruleId":"89","severity":1,"message":"112","line":912,"column":17,"nodeType":"91","messageId":"92","endLine":912,"endColumn":48},{"ruleId":"101","severity":1,"message":"102","line":1385,"column":13,"nodeType":"103","messageId":"104","endLine":1385,"endColumn":26},{"ruleId":"89","severity":1,"message":"113","line":1410,"column":17,"nodeType":"91","messageId":"92","endLine":1410,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":1,"column":1,"nodeType":"116","endLine":215,"endColumn":2},{"ruleId":"117","severity":1,"message":"118","line":127,"column":9,"nodeType":"91","messageId":"119","endLine":127,"endColumn":17},{"ruleId":"120","severity":1,"message":"121","line":214,"column":10,"nodeType":"122","messageId":"123","endLine":214,"endColumn":41},{"ruleId":"89","severity":1,"message":"113","line":11,"column":13,"nodeType":"91","messageId":"92","endLine":11,"endColumn":17},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"@typescript-eslint/no-unused-vars","'overlayImages' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Item' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'stepX' is assigned a value but never used.","'stepY' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'s' is assigned a value but never used.","'proportionsOnOld' is assigned a value but never used.","'ImageProcessingColorCheck' is assigned a value but never used.","'checkChangeToCropPathProcessing' is assigned a value but never used.","'that' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","@typescript-eslint/no-redeclare","'generate' is already defined.","redeclared","no-new-func","The Function constructor is eval.","NewExpression","noFunctionConstructor","no-global-assign","no-unsafe-negation"]